
CREATE DATABASE SUPPLY_CHAIN

USE SUPPLY_CHAIN

CREATE TABLE CUSTOMER (
    ID VARCHAR(10) CONSTRAINT CUS_ID_PK PRIMARY KEY,
    NAME VARCHAR(50) CONSTRAINT CUSTN_NN NOT NULL,
    STREET VARCHAR(50),
    CITY VARCHAR(20),
    ZIP VARCHAR(5),
    REGION VARCHAR(50),
    COUNTRY VARCHAR(50)
  );


    CREATE TABLE EMPLOYEE (
    ID VARCHAR(10) CONSTRAINT E_ID_PK PRIMARY KEY,
    NAME VARCHAR(45) CONSTRAINT EMP_NN NOT NULL,
    DOB DATE,
    STREET VARCHAR(50),
    CITY VARCHAR(50),
    ZIP VARCHAR(5),
    HIRE_DATE DATE,
    END_DATE DATE
);


CREATE TABLE PRODUCTS (
    ID VARCHAR(10) ,
    NAME VARCHAR(50) CONSTRAINT PNAME_NN NOT NULL,
    STATUS VARCHAR(10) CHECK(STATUS IN ('AVAILABLE','CLOSED')),
    QTY_UNIT VARCHAR(10),
    ORIGIN_COUNTRY VARCHAR(50),
    CONSTRAINT PID_PK PRIMARY KEY(ID,NAME)
);


CREATE TABLE SUPPLIER(
    ID VARCHAR(10) CONSTRAINT SID_PK PRIMARY KEY,
    NAME VARCHAR(50) CONSTRAINT SNAME_NN NOT NULL,
    STREET VARCHAR(50),
    CITY VARCHAR(20),
    STATE VARCHAR(50),
    ZIP VARCHAR(5),
    REGION VARCHAR(50)
);


CREATE TABLE SUPPLIER_CONTACT(
    SUPP_EMP_ID VARCHAR(10) CONSTRAINT SUPP_EMP_ID_PK PRIMARY KEY,
    SUPP_EMP_NAME VARCHAR(20) CONSTRAINT SUPP_EMP_NAME_NN NOT NULL,
    SUPP_EMP_EMAIL VARCHAR(25),
    SUPP_EMP_PHONE VARCHAR(10),
    SUPP_EMP_DESIGNATION VARCHAR(20),
    SUPP_EMP_START DATE,
    SUPP_EMP_END DATE,
    SUPP_ID VARCHAR(10),
    FOREIGN KEY (SUPP_ID)
    REFERENCES SUPPLIER(ID)

);


CREATE TABLE PROGRAMS (
    PROG_ID VARCHAR(10) CONSTRAINT PROG_ID_PK PRIMARY KEY,
    PROG_NAME VARCHAR(20) CONSTRAINT PROG_NAME_NN NOT NULL,
    PROG_START DATE,
    PROG_END DATE,
    AVG_PROD_WEEKLY DECIMAL(10,4),
    MAX_PROD_WEEKLY DECIMAL(10,4),
    PROG_STATUS VARCHAR(10),
    CUST_ID VARCHAR(10),
    FOREIGN KEY (CUST_ID)
    REFERENCES CUSTOMER(ID),
    CONSTRAINT PROG_STATUS_LIST CHECK(PROG_STATUS IN ('OPEN','CLOSED','DELAYED','CANCELLED'))
);



CREATE TABLE PROGRAM_PART(
    PROG_PART_ID VARCHAR(10) CONSTRAINT PPID_PK PRIMARY KEY,
    PROG_ID VARCHAR(10),
    PART_ID VARCHAR(10),
    QTY INT,
    FOREIGN KEY (PROG_ID)
    REFERENCES PROGRAMS(PROG_ID),
    FOREIGN KEY (PART_ID)
    REFERENCES PRODUCTS(ID)
);

CREATE TABLE OUTGOING_INVOICE(
    OUT_INV_NO VARCHAR(10) CONSTRAINT OUT_INV_NO_PK PRIMARY KEY,
    OUT_INV_DATE DATE CONSTRAINT OUT_INV_DATE_NN NOT NULL,
    QUANTITY DECIMAL(10,4) CONSTRAINT OUT_INV_QTY_NN NOT NULL,
    QTY_UNIT VARCHAR(10) CONSTRAINT OUT_INV_QUNIT_NN NOT NULL,
    COST_PER_UNIT DECIMAL(10,4) CONSTRAINT OUT_INV_RATE_NN NOT NULL,
    COST_UNIT VARCHAR(10) CONSTRAINT OUT_INV_CUNIT_NN NOT NULL,
    PROG_PART_ID VARCHAR(10),
    FOREIGN KEY (PROG_PART_ID)
        REFERENCES PROGRAM_PART(PROG_PART_ID)
);


CREATE TABLE APPROVAL_DETAILS (
    PART_APPR_ID VARCHAR(10) CONSTRAINT PART_APP_ID_PK PRIMARY KEY,
    PART_ID VARCHAR(10),
    SUPP_ID VARCHAR(10),
    APP_STATUS VARCHAR(10) CONSTRAINT APP_STATUS_LIST CHECK(APP_STATUS IN ('APPROVED','DENIED','PENDING','CLOSED')),
    APP_EMP_ID VARCHAR(10),
	SUBMIT_DATE DATE,
    APP_DATE DATE,
    APP_COST INT,
    AVG_PROD_WEEKLY DECIMAL(10,4),
    MAX_PROD_WEEKLY DECIMAL(10,4),
    FOREIGN KEY (PART_ID)
        REFERENCES PRODUCTS(ID),
    FOREIGN KEY (SUPP_ID)
        REFERENCES SUPPLIER(ID),
    FOREIGN KEY(APP_EMP_ID)
        REFERENCES EMPLOYEE(ID)
  );


  CREATE TABLE PURCHASE_ORDER (
    PO_NO VARCHAR(10) CONSTRAINT PO_PK PRIMARY KEY,
    PART_APPR_ID VARCHAR(10) CONSTRAINT PART_APPR_ID_NN NOT NULL,
    PO_DATE DATE CONSTRAINT PO_DATE_NN NOT NULL,
    ITEM_QTY INT,
        FOREIGN KEY (PART_APPR_ID)
        REFERENCES APPROVAL_DETAILS(PART_APPR_ID)
);

CREATE TABLE SHIPPERS(
ID VARCHAR(10) PRIMARY KEY,
ORG_NAME VARCHAR(20) NOT NULL,
STREET VARCHAR(50),
CITY VARCHAR(20),
ZIP VARCHAR(10),
AREA VARCHAR(20),
);

CREATE TABLE SHIPPING_DETAILS(
SHIPPER_ID VARCHAR(10),
PART_APPR_ID VARCHAR(10) NOT NULL,
PO_NO VARCHAR(10),
FROM_ VARCHAR(100),
CONSTRAINT SHIPPING_DETAILS_FK PRIMARY KEY(SHIPPER_ID, PO_NO),
FOREIGN KEY (PART_APPR_ID)
REFERENCES APPROVAL_DETAILS(PART_APPR_ID),
FOREIGN KEY (PO_NO)
REFERENCES PURCHASE_ORDER(PO_NO),
FOREIGN KEY (SHIPPER_ID)
REFERENCES SHIPPERS(ID)
)


CREATE TABLE WARHOUSE(
ID VARCHAR(10) PRIMARY KEY,
NAME VARCHAR(20) NOT NULL,
PART_APPR_ID VARCHAR(10) NOT NULL,
PO_NO VARCHAR(10),
STATUS VARCHAR(10) CHECK(STATUS IN ('PICKED','SHIPPED')),
FOREIGN KEY (PART_APPR_ID)
REFERENCES APPROVAL_DETAILS(PART_APPR_ID),
FOREIGN KEY (PO_NO)
REFERENCES PURCHASE_ORDER(PO_NO)
);


CREATE TABLE TRANSPORT(
ID VARCHAR(10) PRIMARY KEY,
ORG_NAME VARCHAR(20),
STREET VARCHAR(100),
CITY VARCHAR(20),
ZIP VARCHAR(5),
)

CREATE TABLE DELIVER_DETAILS(
D_ID VARCHAR(10) PRIMARY KEY,
PROG_ID VARCHAR(10),
TRANS_ID VARCHAR(10),
CUST_ID VARCHAR(10),
PO_NO VARCHAR(10),
STATUS VARCHAR(10) CHECK(STATUS IN ('PROCESSING','DELIVERED')),
STREET VARCHAR(100),
CITY VARCHAR(20),
ZIP VARCHAR(10),
FOREIGN KEY(PROG_ID)
REFERENCES PROGRAMS(PROG_ID),
FOREIGN KEY (CUST_ID)
REFERENCES CUSTOMER(ID),
FOREIGN KEY(PO_NO)
REFERENCES PURCHASE_ORDER(PO_NO),
FOREIGN KEY(TRANS_ID)
REFERENCES TRANSPORT(ID)
)
